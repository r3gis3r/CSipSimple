<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="GlowPadView">

        <!-- Reference to an array resource that be shown as targets around a circle. -->
        <attr name="targetDrawables" />

        <!-- Reference to an array resource that be used as description for the targets around the circle. -->
        <attr name="targetDescriptions" />

        <!-- Reference to an array resource that be used to announce the directions with targets around the circle. -->
        <attr name="directionDescriptions" />

        <!-- Sets a drawable as the center. -->
        <attr name="handleDrawable" />

        <!-- Drawable to use for wave ripple animation. -->
        <attr name="outerRingDrawable" format="reference" />

        <!-- Drawble used for drawing points -->
        <attr name="pointDrawable" format="reference" />

        <!-- Inner radius of glow area. -->
        <attr name="innerRadius" format="dimension" />

        <!-- Outer radius of glow area. Target icons will be drawn on this circle. -->
        <attr name="outerRadius" />

        <!-- Radius of glow under finger. -->
        <attr name="glowRadius" format="dimension" />

        <!-- Tactile feedback duration for actions. Set to '0' for no vibration. -->
        <attr name="vibrationDuration" />

        <!-- How close we need to be before snapping to a target. -->
        <attr name="snapMargin" />

        <!-- Number of waves/chevrons to show in animation. -->
        <attr name="feedbackCount" />

        <!-- Used when the handle shouldn't wait to be hit before following the finger -->
        <attr name="alwaysTrackFinger" />

        <!-- Location along the circle of the first item, in degrees. -->
        <attr name="firstItemOffset" format="float" />

        <!-- Causes targets to snap to the finger location on activation. -->
        <attr name="magneticTargets" format="boolean" />
        <attr name="gravity" />

        <!--
Determine whether the glow pad is allowed to scale to fit the bounds indicated
by its parent. If this is set to false, no scaling will occur. If this is set to true
scaling will occur to fit for any axis in which gravity is set to center.
        -->
        <attr name="allowScaling" format="boolean" />
    </declare-styleable>
    <declare-styleable name="MultiWaveView">

        <!-- Reference to an array resource that be shown as targets around a circle. -->
        <attr name="targetDrawables" format="reference" />

        <!-- Reference to an array resource that be used as description for the targets around the circle. -->
        <attr name="targetDescriptions" format="reference" />

        <!-- Reference to an array resource that be used to announce the directions with targets around the circle. -->
        <attr name="directionDescriptions" format="reference" />

        <!-- Sets a drawable as the drag center. -->
        <attr name="handleDrawable" format="reference" />

        <!-- Drawables to use for chevron animations. May be null. -->
        <attr name="chevronDrawables" format="reference" />

        <!-- Drawable to use for wave ripple animation. -->
        <attr name="waveDrawable" format="reference" />

        <!-- Outer radius of target circle. Icons will be drawn on this circle. -->
        <attr name="outerRadius" format="dimension" />

        <!-- Tactile feedback duration for actions. Set to '0' for no vibration. -->
        <attr name="vibrationDuration" format="integer" />

        <!-- How close we need to be before snapping to a target. -->
        <attr name="snapMargin" format="dimension" />

        <!-- Number of waves/chevrons to show in animation. -->
        <attr name="feedbackCount" format="integer" />

        <!-- Used when the handle shouldn't wait to be hit before following the finger -->
        <attr name="alwaysTrackFinger" format="boolean" />
    </declare-styleable>

    <attr name="gravity">

        <!-- Push object to the top of its container, not changing its size. -->
        <flag name="top" value="0x30" />
        <!-- Push object to the bottom of its container, not changing its size. -->
        <flag name="bottom" value="0x50" />
        <!-- Push object to the left of its container, not changing its size. -->
        <flag name="left" value="0x03" />
        <!-- Push object to the right of its container, not changing its size. -->
        <flag name="right" value="0x05" />
        <!-- Place object in the vertical center of its container, not changing its size. -->
        <flag name="center_vertical" value="0x10" />
        <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
        <flag name="fill_vertical" value="0x70" />
        <!-- Place object in the horizontal center of its container, not changing its size. -->
        <flag name="center_horizontal" value="0x01" />
        <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
        <flag name="fill_horizontal" value="0x07" />
        <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
        <flag name="center" value="0x11" />
        <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
        <flag name="fill" value="0x77" />
        <!--
Additional option that can be set to have the top and/or bottom edges of
the child clipped to its container's bounds.
The clip will be based on the vertical gravity: a top gravity will clip the bottom
edge, a bottom gravity will clip the top edge, and neither will clip both edges.
        -->
        <flag name="clip_vertical" value="0x80" />
        <!--
Additional option that can be set to have the left and/or right edges of
the child clipped to its container's bounds.
The clip will be based on the horizontal gravity: a left gravity will clip the right
edge, a right gravity will clip the left edge, and neither will clip both edges.
        -->
        <flag name="clip_horizontal" value="0x08" />
        <!-- Push object to the beginning of its container, not changing its size. -->
        <flag name="start" value="0x00800003" />
        <!-- Push object to the end of its container, not changing its size. -->
        <flag name="end" value="0x00800005" />
    </attr>

</resources>